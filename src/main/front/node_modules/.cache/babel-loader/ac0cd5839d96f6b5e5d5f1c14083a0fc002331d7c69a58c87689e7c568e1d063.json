{"ast":null,"code":"import React,{useState}from'react';import styled from'styled-components';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const navigate=useNavigate();const handleLogin=async event=>{event.preventDefault();try{const response=await fetch('http://localhost:8080/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})//JSON \n});if(response.ok){//HTTP응답코드 200번대 코드 반환하면 됨\nconst data=await response.json();//로그인 성공\nconsole.log('로그인 성공:',data);navigate('/');//홈 페이지로 이동\n}else{console.error('로그인 실패');alert('로그인에 실패했습니다. 다시 시도해 주세요.');}}catch(error){console.error('로그인 요청 에러:',error);alert('서버와의 연결에 문제가 발생했습니다.');}};return/*#__PURE__*/_jsxs(LoginContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(Input,{type:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(Input,{type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]})]});};export default Login;// Styled Components\nconst LoginContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 100px;\n`;const Form=styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n`;const Input=styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n`;const Button=styled.button`\n  padding: 10px;\n  background-color: #333;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #555;\n  }\n`;","map":{"version":3,"names":["React","useState","styled","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","navigate","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","error","alert","LoginContainer","children","Form","onSubmit","Input","type","placeholder","value","onChange","e","target","required","Button","div","form","input","button"],"sources":["D:/WineProject/DB_TP_2024/src/main/front/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }), //JSON \r\n      });\r\n\r\n      if (response.ok) {//HTTP응답코드 200번대 코드 반환하면 됨\r\n        const data = await response.json();\r\n        //로그인 성공\r\n        console.log('로그인 성공:', data);\r\n        navigate('/'); //홈 페이지로 이동\r\n      } else {\r\n        console.error('로그인 실패');\r\n        alert('로그인에 실패했습니다. 다시 시도해 주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('로그인 요청 에러:', error);\r\n      alert('서버와의 연결에 문제가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <h2>로그인</h2>\r\n      <Form onSubmit={handleLogin}>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <Button type=\"submit\">로그인</Button>\r\n      </Form>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// Styled Components\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px;\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #555;\r\n  }\r\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}